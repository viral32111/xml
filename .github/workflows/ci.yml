name: CI

on:
  push:
    paths:
      - '**'
    branches:
      - '**'
    tags:
      - '*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile:
          - dev
          - release
        toolchain:
          - stable
          - beta
          - nightly
        target:
          - x86_64-unknown-linux-gnu # Linux (glibc) on 64-bit x86
          - x86_64-unknown-linux-musl # Linux (musl) on 64-bit x86
          - aarch64-unknown-linux-gnu # Linux (glibc) on 64-bit ARM
          - aarch64-unknown-linux-musl # Linux (musl) on 64-bit ARM
          - x86_64-pc-windows-gnu # Windows on 64-bit x86
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install ${{ matrix.toolchain }}
          rustup target add ${{ matrix.target }}

      - name: Install cross-compiler
        run: cargo install cross

      - name: Build code
        run: cross build --verbose --locked --profile ${{ matrix.profile }} --target ${{ matrix.target }}

      - name: Test code
        if: ${{ matrix.target != 'x86_64-pc-windows-gnu' }}
        run: cross test --verbose --locked --profile ${{ matrix.profile }} --target ${{ matrix.target }}

      - name: Generate documentation
        run: cross doc --verbose --locked --profile ${{ matrix.profile }} --target ${{ matrix.target }}

      - name: Check publishing
        run: cross publish --verbose --locked --target ${{ matrix.target }} --dry-run

      - name: Calculate checksums
        run: |
          export CRATE_PATH=$(find target -type f -name 'viral32111-xml-*.*.*.crate')
          echo "Found crate at '${CRATE_PATH}'"

          md5sum "${CRATE_PATH}" | cut --delimiter ' ' --fields 1 | tee "${CRATE_PATH}.md5"
          echo "MD5 checksum of '${CRATE_PATH}' is '$(cat "${CRATE_PATH}.md5")'"

          sha1sum "${CRATE_PATH}" | cut --delimiter ' ' --fields 1 | tee "${CRATE_PATH}.sha1"
          echo "SHA-1 checksum of '${CRATE_PATH}' is '$(cat "${CRATE_PATH}.sha1")'"

          sha256sum "${CRATE_PATH}" | cut --delimiter ' ' --fields 1 | tee "${CRATE_PATH}.sha256"
          echo "SHA-256 checksum of '${CRATE_PATH}' is '$(cat "${CRATE_PATH}.sha256")'"

          sha512sum "${CRATE_PATH}" | cut --delimiter ' ' --fields 1 | tee "${CRATE_PATH}.sha512"
          echo "SHA-512 checksum of '${CRATE_PATH}' is '$(cat "${CRATE_PATH}.sha512")'"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.profile }}_${{ matrix.toolchain }}_${{ matrix.target }}
          path: target

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    needs: build
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup set profile minimal
          rustup toolchain install stable

      - name: Publish crate
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --verbose --locked

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && (github.ref_name == 'main' || github.ref_type == 'tag') }}
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}/help.html
    concurrency:
      group: github-pages
      cancel-in-progress: false
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release_stable_x86_64-unknown-linux-gnu # We only deploy a single target
          path: target

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/x86_64-unknown-linux-gnu/doc

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release_stable_x86_64-unknown-linux-gnu # We only publish a single target
          path: target

      - name: Organise checksums
        run: |
          echo "$(cat target/package/viral32111-xml-${{ github.ref_name }}.crate.md5) viral32111-xml-${{ github.ref_name }}.crate" | tee --append MD5SUMS.txt
          echo "$(cat target/package/viral32111-xml-${{ github.ref_name }}.crate.sha1) viral32111-xml-${{ github.ref_name }}.crate" | tee --append SHA1SUMS.txt
          echo "$(cat target/package/viral32111-xml-${{ github.ref_name }}.crate.sha256) viral32111-xml-${{ github.ref_name }}.crate" | tee --append SHA256SUMS.txt
          echo "$(cat target/package/viral32111-xml-${{ github.ref_name }}.crate.sha512) viral32111-xml-${{ github.ref_name }}.crate" | tee --append SHA512SUMS.txt
  
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: |
            target/package/viral32111-stomp-${{ github.ref_name }}.crate
            MD5SUMS.txt
            SHA1SUMS.txt
            SHA256SUMS.txt
            SHA512SUMS.txt
          token: ${{ secrets.GITHUB_TOKEN }}
